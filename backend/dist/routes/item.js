"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const client_1 = require("@prisma/client");
const ItemRepository_1 = require("../repositories/ItemRepository");
const ItemService_1 = require("../services/ItemService");
const ItemController_1 = require("../controllers/ItemController");
const auth_1 = require("../middleware/auth");
const router = (0, express_1.Router)();
const prisma = new client_1.PrismaClient();
const itemRepository = new ItemRepository_1.ItemRepository(prisma);
const itemService = new ItemService_1.ItemService(itemRepository);
const itemController = new ItemController_1.ItemController(itemService);
const { validateCreate, validateUpdate, validateSearch, validateId, validateSearchByName, validateSearchByUnidade, validateLimit, } = itemController.getValidations();
router.use(auth_1.authenticateToken);
router.get("/", validateSearch, itemController.findAll);
router.get("/with-relations", validateSearch, itemController.findAllWithRelations);
router.get("/active", itemController.findActiveForSelection);
router.get("/unidades", itemController.findDistinctUnidades);
router.get("/most-used", validateLimit, itemController.findMostUsed);
router.get("/search", validateSearchByName, itemController.findByNome);
router.get("/by-unidade", validateSearchByUnidade, itemController.findByUnidade);
router.get("/:id", validateId, itemController.findById);
router.get("/:id/with-relations", validateId, itemController.findByIdWithRelations);
router.get("/:id/stats", validateId, itemController.getItemStats);
router.post("/", validateCreate, itemController.create);
router.put("/:id", validateUpdate, itemController.update);
router.delete("/:id", validateId, itemController.delete);
router.patch("/:id/reactivate", validateId, itemController.reactivate);
exports.default = router;
//# sourceMappingURL=item.js.map